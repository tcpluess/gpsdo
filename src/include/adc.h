/*******************************************************************************
 * Company:
 *
 * Project:        GPS frequency standard
 *
 * Target:         any
 *
 * Type:           header file
 *
 * Description:    driver for the ADC1 of the STM32F407
 *
 * Compiler:       ANSI-C
 *
 * Filename:       adc.h
 *
 * Version:        1.0
 *
 * Author:         Tobias Plüss <tpluess@ieee.org>
 *
 * Creation-Date:  31.03.2020
 *******************************************************************************
   Modification History:
   [1.0]    31.03.2020    Tobias Plüss <tpluess@ieee.org>
   - created
 ******************************************************************************/

#ifndef __ADC_H__
#define __ADC_H__

/*******************************************************************************
 * INCLUDE FILES
 ******************************************************************************/

#include <stdint.h>

/*******************************************************************************
 * CONSTANT DEFINITIONS
 ******************************************************************************/

/*******************************************************************************
 * MACRO DEFINITIONS
 ******************************************************************************/

/*******************************************************************************
 * TYPE DEFINITIONS
 ******************************************************************************/

/*******************************************************************************
 * FUNCTION PROTOTYPES (PUBLIC)
 ******************************************************************************/

/*============================================================================*/
extern void adc_init(void);
/*------------------------------------------------------------------------------
  Function:
  initialise pin assignment and the adc module
  in:  none
  out: none
==============================================================================*/

/*============================================================================*/
extern void start_conversion(void);
/*------------------------------------------------------------------------------
  Function:
  sets up the adc and starts a conversion; the actual conversion happens in the
  background
  in:  none
  out: none
==============================================================================*/

/*============================================================================*/
extern float get_iocxo(void);
/*------------------------------------------------------------------------------
  Function:
  return the ocxo currnt in mA; start_conversion needs to be called first
  in:  none
  out: none
==============================================================================*/

/*******************************************************************************
 * END OF CODE
 ******************************************************************************/

#endif

