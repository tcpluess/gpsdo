/*******************************************************************************
 * Company:
 *
 * Project:        GPS frequency standard
 *
 * Description:    driver for the DAC8501
 *
 * Filename:       dac.h
 *
 * Author:         Tobias Pl√ºss <tpluess@ieee.org>
 *
 * Creation-Date:  03.03.2020
 ******************************************************************************/

#ifndef __DAC_H__
#define __DAC_H__

/*******************************************************************************
 * INCLUDE FILES
 ******************************************************************************/

#include <stdint.h>
#include <stdbool.h>

/*******************************************************************************
 * CONSTANT DEFINITIONS
 ******************************************************************************/

/*******************************************************************************
 * MACRO DEFINITIONS
 ******************************************************************************/

/*******************************************************************************
 * TYPE DEFINITIONS
 ******************************************************************************/

/*******************************************************************************
 * FUNCTION PROTOTYPES (PUBLIC)
 ******************************************************************************/

/*============================================================================*/
extern void dac_setup(void);
/*------------------------------------------------------------------------------
  Function:
  initialise pin assignment and the usart 2
  in:  none
  out: none
==============================================================================*/

/*============================================================================*/
extern void set_dac(float dacval, bool force);
/*------------------------------------------------------------------------------
  Function:
  initialise pin assignment and the usart 2
  in:  dacval -> floating point value to be sent to the dac
       force -> force update of the dac even if manual hold is active
  out: none
==============================================================================*/

/*============================================================================*/
extern void dac_sethold(bool on);
/*------------------------------------------------------------------------------
  Function:
  initialise pin assignment and the usart 2
  in:  none
  out: none
==============================================================================*/


/*============================================================================*/
extern bool dac_gethold(void);
/*------------------------------------------------------------------------------
  Function:
  initialise pin assignment and the usart 2
  in:  none
  out: none
==============================================================================*/

/*******************************************************************************
 * END OF CODE
 ******************************************************************************/

#endif
